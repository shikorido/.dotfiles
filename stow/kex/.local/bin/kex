#!/bin/bash

#set -x

function start-kex() {
    if [ ! -f ~/.vnc/passwd ]; then
        passwd-kex
    fi
    USR=$(whoami)
    if [ $USR == "root" ]; then
        #args=("-nolisten unix")
        SCREEN=":2"
    else
        args=("-nolisten unix")
        SCREEN=":1"
    fi
    #export HOME=${HOME}; export USER=${USR}; LD_PRELOAD=/usr/lib/aarch64-linux-gnu/libgcc_s.so.1 nohup vncserver $SCREEN >/dev/null 2>&1 </dev/null
    #export HOME=${HOME}; export USER=${USR}; LD_PRELOAD=/usr/lib/aarch64-linux-gnu/libgcc_s.so.1 nohup vncserver $SCREEN $args >/dev/null 2>&1 </dev/null
    export HOME=${HOME}; export USER=${USR};
    LD_PRELOAD=/usr/lib/aarch64-linux-gnu/libgcc_s.so.1 \
    vncserver $SCREEN ${args[@]}
    starting_kex=1
    return 0
}

function stop-kex() {
    vncserver -kill :1 | sed s/"Xtigervnc"/"NetHunter KeX"/
    vncserver -kill :2 | sed s/"Xtigervnc"/"NetHunter KeX"/
    return 0
}

function passwd-kex() {
    vncpasswd
    return 0
}

function status-kex() {
    sessions=$(vncserver -list | sed s/"TigerVNC"/"NetHunter KeX"/)
    if [[ $sessions == *"590"* ]]; then
        printf "\n${sessions}\n"
        printf "\nYou can use the KeX client to connect to any of these displays.\n\n"
    else
        if [ ! -z $starting_kex ]; then
            printf '\nError starting the KeX server.\nPlease try "nethunter kex kill" or restart your termux session and try again.\n\n'
        fi
    fi
    return 0
}

function kill-kex() {
    pkill Xtigervnc
    return $?
}

case $1 in
    start)
        start-kex
        ;;
    stop)
        stop-kex
        ;;
    status)
        status-kex
        ;;
    passwd)
        passwd-kex
        ;;
    kill)
        kill-kex
        ;;
    *)
        stop-kex
        start-kex
        status-kex
        ;;
esac
